# query to get units of measure reference data for a specific client
# modify the input data as needed for the client

prefix gist:  <https://w3id.org/semanticarts/ns/ontology/gist/>
prefix gistd: <https://w3id.org/semanticarts/ns/data/gist/>
prefix gistx: <https://w3id.org/semanticarts/ns/data/gist/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix sh: <http://www.w3.org/ns/shacl#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

construct {
  ?unitOfMeasure gist:isMemberOf   ?unitGroup .
  ?aspect        gist:hasUnitGroup ?unitGroup .
  ?aspect        gist:isCategorizedBy ?discipline . 
  ?discipline    ?disciplinePredicate    ?disciplineObject .
  ?aspect        ?aspectPredicate        ?aspectObject .
  ?unitGroup     ?unitGroupPredicate     ?unitGroupObject .
  ?unitOfMeasure ?unitOfMeasurePredicate ?unitOfMeasureObject .  
  }

where {

# input is a list of Aspects, a list of Unit Groups, and a list of Units the client will be using

# units to include
values ?unitOfMeasure {
gistd:_UnitOfMeasure_kilogram
gistd:_UnitOfMeasure_ounce_mass
gistd:_UnitOfMeasure_pound
}
  
# unit groups to include
values ?unitGroup {
gistd:_UnitGroup_mass 
}
  
# aspects to include
values ?aspect {
gistd:_Aspect_mass
}
   
 ?unitOfMeasure gist:isMemberOf   ?unitGroup .
 ?aspect        gist:hasUnitGroup ?unitGroup .

 optional {?aspect gist:isCategorizedBy ?discipline}
  
# get details of each aspect, unit group, unit, and discipline

{?aspect        ?aspectPredicate        ?aspectObject .
 filter(?aspectPredicate != gist:hasUnitGroup)
 filter(?aspectPredicate != gist:isCategorizedBy)
 }
  
union {?unitGroup     ?unitGroupPredicate     ?unitGroupObject .}
  
union {?unitOfMeasure ?unitOfMeasurePredicate ?unitOfMeasureObject .
        filter(?unitOfMeasurePredicate != gist:isMemberOf)
        }

union {?discipline     ?disciplinePredicate     ?disciplineObject .}
}
